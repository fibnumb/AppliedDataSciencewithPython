Assignmen3 

Question 3:

import pandas as pd
import numpy as np

def answer_three():
    Top15 = answer_one()
    data =     ['2006',
                '2007',
                '2008',
                '2009',
                '2010',
                '2011',
                '2012',
                '2013',
                '2014',
                '2015']
    Top15['Mean'] = Top15[data].mean(axis=1).sort_values(ascending=True)

    return  Top15['Mean']
answer_three()

Question 4

import numpy as np
def answer_four():
    row=[]
    Top15 = answer_one()
    data =     ['2006',
                '2007',
                '2008',
                '2009',
                '2010',
                '2011',
                '2012',
                '2013',
                '2014',
                '2015']
    Top15prime = Top15[data]
    
    sub = Top15prime['2015'] - Top15prime['2006']
    print (sub)
    return sub.iloc[5]#Top15#sub.iloc[4]
answer_four()



Question 5:

def answer_five():
    Top15 = answer_one()
    return Top15['Energy Supply per Capita'].mean()

answer_five()


Question6:

def answer_six():
    Top15 = answer_one()
    return (Top15[Top15['% Renewable'] == max(Top15['% Renewable'])].index.tolist()[0],Top15['% Renewable'].max())

answer_six()

Question7:

def answer_seven():
    Top15 = answer_one()
    Top15['Ratio'] = Top15['Self-citations'] / Top15['Citations']
    return (Top15[Top15['Ratio'] == max(Top15['Ratio'])].index.tolist()[0], Top15['Ratio'].max())

answer_seven()

Question 8:

def answer_eight():
    Top15 = answer_one()
    Top15['PopEst'] = Top15['Energy Supply per Capita'] / Top15['Energy Supply']
    return Top15['PopEst'].sort_values(ascending=False).index.tolist()[2]

answer_eight()

Question 9:
a

s
